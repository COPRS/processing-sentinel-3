kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.processing.namespace }}
  labels:
    app: {{ .Release.Name }}
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  serviceName: {{ .Release.Name }}-svc
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        role: {{ .Release.Name }}
        type: {{ .Values.processing.namespace }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: wrapperconfig
                operator: DoesNotExist
      containers:
      - name: {{ .Release.Name }}
        image: registry.tools.s1pdgs.eu/werum/processing/s1pro-core-production-trigger:{{ .Values.image.tag }}
        imagePullPolicy: Always
        volumeMounts:
        - name: service-config-volume
          mountPath: /app/config
        - name: tasktables-config-volume
          mountPath: /app/tasktables
        ports:
        - name: web
          protocol: TCP
          containerPort: {{ .Values.service.port }}
        env:
        - name: storage_user_id
          valueFrom:
            secretKeyRef:
              name: obs
              key: USER_ID
        - name: storage_user_secret
          valueFrom:
            secretKeyRef:
              name: obs
              key: USER_SECRET
        envFrom:
        - configMapRef:
            name: s1pdgs-config
        - configMapRef:
            name: s1pdgs-env
        securityContext:
          privileged: false
        livenessProbe:
          httpGet:
            path: /app/status
            port: {{ .Values.service.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          
      - name: {{ .Release.Name }}-mqi
        image: registry.tools.s1pdgs.eu/werum/processing/s1pro-core-mqi-server:{{ .Values.image.tag }}
        imagePullPolicy: Always
        volumeMounts:
        - name: mqi-config-volume
          mountPath: /app/config
        ports:
        - name: data
          protocol: TCP
          containerPort: {{ .Values.mqiService.port }}
        envFrom:
        - configMapRef:
            name: s1pdgs-config
        - configMapRef:
            name: s1pdgs-env
        livenessProbe:
          httpGet:
            path: /app/status
            port: {{ .Values.mqiService.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
      
      imagePullSecrets:
      - name: harbor-tools
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      subdomain: {{ .Release.Name }}-svc
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: service-config-volume
          configMap:
            name: {{ .Release.Name }}-service-config
        - name: mqi-config-volume
          configMap:
            name: {{ .Release.Name }}-mqi-config
        - name: tasktables-config-volume
          configMap:
            name: {{ .Release.Name }}-tasktables-config
            
  serviceName: {{ .Release.Name }}-svc
  revisionHistoryLimit: 10

